image: docker:latest

variables:
  IMAGE_NAME: "registry.gitlab.com/Tom8797438/scan_ticket:latest"
  DOCKER_DRIVER: overlay2

stages:
  - test
  - build
  - deploy

# 🛠️ Test de connexion au GitLab Registry
test_registry:
  stage: test
  services:
    - docker:dind
  script:
    - echo "🔑 Connexion au GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
    - echo "✅ Connexion réussie !"
  only:
    - main

# 🔑 Test de connexion SSH avant déploiement
test_ssh:
  stage: test
  script:
    - echo "🔑 Test de connexion SSH..."
    - apk add --no-cache openssh
    - ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST "echo '✅ Connexion SSH réussie'"
  only:
    - main

# 📦 Build & Push de l'image Docker
build:
  stage: build
  services:
    - docker:dind
  script:
    - echo "📦 Construction de l'image Docker..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
    - docker build -t $IMAGE_NAME .
    - echo "📤 Poussée de l'image vers GitLab Registry..."
    - docker push $IMAGE_NAME
  only:
    - main

# 🚀 Déploiement sur le serveur Raspberry Pi
deploy:
  stage: deploy
  script:
    - echo "🚀 Déploiement en cours sur $SSH_HOST..."
    - apk add --no-cache openssh
    - ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST << 'EOF'
        docker pull $IMAGE_NAME
        docker stop mon-conteneur || true
        docker rm mon-conteneur || true
        docker run -d --name mon-conteneur -p 80:80 $IMAGE_NAME
    EOF
  only:
    - main
