pipeline {
    agent any

    environment {
        FRONTEND_IMAGE = 'scan-ticket-frontend'
        BACKEND_IMAGE = 'scan-ticket-backend'
        RASPBERRY_USER = 'webserveur'
        RASPBERRY_HOST = '192.168.1.18'
        RASPBERRY_APP_PATH = "/home/webserveur/app"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://gitlab.com/Tom8797438/scan_ticket.git'
            }
        }

        stage('Build Docker Images') {
            parallel {
                stage('Build Frontend') {
                    steps {
                        sh "docker build -t ${FRONTEND_IMAGE} -f scan-ticket-app/dockerfile scan-ticket-app"
                    }
                }

                stage('Build Backend') {
                    steps {
                        sh "docker build -t ${BACKEND_IMAGE} -f src/dockerfile src"
                    }
                }
            }
        }

        stage('Push Images to Raspberry') {
            steps {
                sh """
                docker save ${FRONTEND_IMAGE} > frontend.tar
                docker save ${BACKEND_IMAGE} > backend.tar
                scp frontend.tar backend.tar ${RASPBERRY_USER}@${RASPBERRY_HOST}:${RASPBERRY_APP_PATH}/
                """
            }
        }

        stage('Deploy on Raspberry') {
            steps {
                sh """
                ssh ${RASPBERRY_USER}@${RASPBERRY_HOST} 'docker load -i ${RASPBERRY_APP_PATH}/frontend.tar'
                ssh ${RASPBERRY_USER}@${RASPBERRY_HOST} 'docker load -i ${RASPBERRY_APP_PATH}/backend.tar'
                ssh ${RASPBERRY_USER}@${RASPBERRY_HOST} 'cd ${RASPBERRY_APP_PATH} && docker-compose up -d'
                """
            }
        }
    }

    post {
        success {
            echo 'üöÄ D√©ploiement r√©ussi sur le Raspberry Pi !'
        }
        failure {
            echo '‚ùå √âchec du d√©ploiement, v√©rifie les logs.'
        }
    }
}
