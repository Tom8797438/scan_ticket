pipeline {
    agent { node { label '' } }

    environment {
        IMAGE_BACKEND = "tyzer/backend"
        IMAGE_FRONTEND = "tyzer/frontend"
        REGISTRY_URL = "tyzer.top:5000"
        WORKSPACE_PATH = "/mnt/externe/jenkins/agent/workspace"
        FRONTEND_API_URL = "https://tyzer.top/api"  // Corrige l'URL de l'API
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo "üì• Clonage du d√©p√¥t GitLab..."
                    dir("${WORKSPACE_PATH}/scan_ticket") {
                        git branch: 'main', url: "https://gitlab.com/Tom8797438/scan_ticket.git"
                    }
                }
            }
        }

        stage('Update Frontend API URL') {
            steps {
                script {
                    sh """
                    if [ -d "${WORKSPACE_PATH}/scan_ticket/scan-ticket-app/src" ]; then
                        echo "üîß Mise √† jour de l'URL API..."
                        sed -i 's|http://localhost:1337/api|$FRONTEND_API_URL|g' ${WORKSPACE_PATH}/scan_ticket/scan-ticket-app/src/config.js
                    else
                        echo "‚ö†Ô∏è Dossier scan-ticket-app introuvable ! V√©rifie le d√©p√¥t."
                        exit 1
                    fi
                    """
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh """
                    echo "üê≥ Construction des images Docker..."
                    cd ${WORKSPACE_PATH}/scan_ticket
                    docker build -t $IMAGE_BACKEND .
                    cd scan-ticket-app
                    docker build -t $IMAGE_FRONTEND .
                    docker tag $IMAGE_BACKEND $REGISTRY_URL/backend
                    docker tag $IMAGE_FRONTEND $REGISTRY_URL/frontend
                    """
                }
            }
        }

        stage('Push Images to Registry') {
            steps {
                script {
                    sh """
                    echo "üöÄ Push des images Docker sur le registre..."
                    docker push $REGISTRY_URL/backend
                    docker push $REGISTRY_URL/frontend
                    """
                }
            }
        }

        stage('Deploy on Raspberry Pi') {
            steps {
                script {
                    sh """
                    echo "üì¶ D√©ploiement des conteneurs avec Docker Compose..."
                    cd /mnt/externe/jenkins/deployment
                    docker-compose pull
                    docker-compose up --force-recreate -d
                    sudo systemctl restart nginx
                    """
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ D√©ploiement r√©ussi sur https://tyzer.top !'
        }
        failure {
            echo '‚ùå √âchec du d√©ploiement, v√©rifie les logs.'
        }
    }
}
