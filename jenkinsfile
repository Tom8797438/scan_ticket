pipeline {
    agent any

    environment {
        IMAGE_BACKEND = "tyzer/backend"
        IMAGE_FRONTEND = "tyzer/frontend"
        REGISTRY_URL = "tyzer.top:5000"
        WORKSPACE_PATH = "/mnt/disque1/jenkins/agent/workspace"
        FRONTEND_API_URL = "https://tyzer.top/api"  // Corrige l'URL de l'API
    }

    stages {
        stage('Clone Repository') {
            steps {
                dir("${WORKSPACE_PATH}/scan_ticket") {
                    git branch: 'main', url: "https://gitlab.com/Tom8797438/scan_ticket.git"
                }
            }
        }

        stage('Update Frontend API URL') {
            steps {
                script {
                    sh """
                    cd ${WORKSPACE_PATH}/scan_ticket/scan-ticket-app
                    echo "Remplacement de l'URL API..."
                    sed -i 's|http://localhost:1337/api|$FRONTEND_API_URL|g' src/config.js
                    """
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh """
                    cd ${WORKSPACE_PATH}/scan_ticket
                    docker build -t $IMAGE_BACKEND .
                    docker build -t $IMAGE_FRONTEND scan-ticket-app/
                    docker tag $IMAGE_BACKEND $REGISTRY_URL/backend
                    docker tag $IMAGE_FRONTEND $REGISTRY_URL/frontend
                    """
                }
            }
        }

        stage('Push Images to Registry') {
            steps {
                script {
                    sh """
                    docker push $REGISTRY_URL/backend
                    docker push $REGISTRY_URL/frontend
                    """
                }
            }
        }

        stage('Deploy on Raspberry Pi') {
            steps {
                script {
                    sh """
                    cd /mnt/disque1/jenkins/deployment
                    docker-compose pull
                    docker-compose up --force-recreate -d
                    sudo systemctl restart nginx
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'üöÄ D√©ploiement r√©ussi sur https://tyzer.top !'
        }
        failure {
            echo '‚ùå √âchec du d√©ploiement, v√©rifie les logs.'
        }
    }
}
